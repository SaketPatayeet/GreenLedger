'use strict';

/* eslint-disable */

var chai = require('chai');
var assert = chai.assert;
var decodeParams = require('../index.js').decodeParams;
var BigNumber = require('bignumber.js');
var bn = require('bn.js');

describe('decodeParam', function () {
                                                           var test = function test(t) {
                                                                                                                      it('\'should turn type ' + t.type + ' ' + t.value + ' to ' + t.expected, function () {
                                                                                                                                                                                 if (t.expected.toArray || t.expected.dividedToIntegerBy) {
                                                                                                                                                                                                                                            assert.deepEqual(decodeParams([t.type], '0x' + t.value)[0].toString(10), t.expected.toString(10));
                                                                                                                                                                                 } else {
                                                                                                                                                                                                                                            assert.deepEqual(decodeParams([t.type], '0x' + t.value)[0], t.expected);
                                                                                                                                                                                 }
                                                                                                                      });
                                                           };

                                                           test({ type: 'address', expected: '0x407d73d8a49eeb85d32cf465507dd71d507100c1',
                                                                                                                      value: '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' });
                                                           test({ type: 'address[2]', expected: ['0x407d73d8a49eeb85d32cf465507dd71d507100c1', '0x407d73d8a49eeb85d32cf465507dd71d507100c3'],
                                                                                                                      value: '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' + '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' });
                                                           test({ type: 'address[]', expected: ['0x407d73d8a49eeb85d32cf465507dd71d507100c1', '0x407d73d8a49eeb85d32cf465507dd71d507100c3'],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000002' + '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' + '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' });
                                                           /* test({ type: 'address[][2]', expected: [['0x407d73d8a49eeb85d32cf465507dd71d507100c1', '0x407d73d8a49eeb85d32cf465507dd71d507100c2'],
                                                                                                  ['0x407d73d8a49eeb85d32cf465507dd71d507100c3', '0x407d73d8a49eeb85d32cf465507dd71d507100c4']],
                                                                                                               value: '0000000000000000000000000000000000000000000000000000000000000040' +
                                                                                                                      '00000000000000000000000000000000000000000000000000000000000000a0' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000002' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000002' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4' });
                                                           test({ type: 'address[2][]', expected: [['0x407d73d8a49eeb85d32cf465507dd71d507100c1', '0x407d73d8a49eeb85d32cf465507dd71d507100c2'],
                                                                                                  ['0x407d73d8a49eeb85d32cf465507dd71d507100c3', '0x407d73d8a49eeb85d32cf465507dd71d507100c4']],
                                                                                                               value: '0000000000000000000000000000000000000000000000000000000000000020' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000002' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4' });
                                                           test({ type: 'address[][]', expected: [['0x407d73d8a49eeb85d32cf465507dd71d507100c1', '0x407d73d8a49eeb85d32cf465507dd71d507100c2'],
                                                                                                  ['0x407d73d8a49eeb85d32cf465507dd71d507100c3', '0x407d73d8a49eeb85d32cf465507dd71d507100c4']],
                                                                                                               value: '0000000000000000000000000000000000000000000000000000000000000020' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000002' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000080' +
                                                                                                                      '00000000000000000000000000000000000000000000000000000000000000e0' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000002' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c1' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c2' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000002' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c3' +
                                                                                                                      '000000000000000000000000407d73d8a49eeb85d32cf465507dd71d507100c4' }); */
                                                           test({ type: 'bool', expected: true, value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'bool', expected: false, value: '0000000000000000000000000000000000000000000000000000000000000000' });
                                                           test({ type: 'bool[2]', expected: [true, false],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000000' });
                                                           test({ type: 'bool[]', expected: [true, true, false],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000003' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000000' });

                                                           test({ type: 'int', expected: new bn(1), value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'int', expected: new BigNumber(1), value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'int', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'int', expected: new bn(-1), value: 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' });
                                                           test({ type: 'int256', expected: new bn(1), value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'int256', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'int256', expected: new bn(-1), value: 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' });
                                                           test({ type: 'int8', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'int8[2]', expected: [new bn(16), new bn(2)],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000010' + '0000000000000000000000000000000000000000000000000000000000000002' });
                                                           test({ type: 'int32', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'int64', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'int128', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'int[]', expected: [], value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000000' });
                                                           test({ type: 'int[]', expected: [new bn(3)], value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000003' });
                                                           test({ type: 'int256[]', expected: [new bn(3)], value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000003' });
                                                           test({ type: 'int[]', expected: [new bn(1), new bn(2), new bn(3)],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000003' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000002' + '0000000000000000000000000000000000000000000000000000000000000003' });
                                                           test({ type: 'int[3][]', expected: [[new bn(1), new bn(2), new bn(3)], [new bn(4), new bn(5), new bn(6)]],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000002' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000002' + '0000000000000000000000000000000000000000000000000000000000000003' + '0000000000000000000000000000000000000000000000000000000000000004' + '0000000000000000000000000000000000000000000000000000000000000005' + '0000000000000000000000000000000000000000000000000000000000000006' });

                                                           test({ type: 'uint', expected: new bn(1), value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'uint', expected: new bn(1), value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'uint', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'uint', expected: new bn('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 'hex'),
                                                                                                                      value: 'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff' });
                                                           test({ type: 'uint256', expected: new bn(1), value: '0000000000000000000000000000000000000000000000000000000000000001' });
                                                           test({ type: 'uint256', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'uint8', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'uint32', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'uint64', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'uint128', expected: new bn(16), value: '0000000000000000000000000000000000000000000000000000000000000010' });
                                                           test({ type: 'uint[]', expected: [], value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000000' });
                                                           test({ type: 'uint[]', expected: [new bn(3)], value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000003' });
                                                           test({ type: 'uint256[]', expected: [new bn(3)], value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000003' });
                                                           test({ type: 'uint[]', expected: [new bn(1), new bn(2), new bn(3)],
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000003' + '0000000000000000000000000000000000000000000000000000000000000001' + '0000000000000000000000000000000000000000000000000000000000000002' + '0000000000000000000000000000000000000000000000000000000000000003' });
                                                           test({ type: 'uint[3][]', expected: [[new bn(1), new bn(2), new bn(3)], [new bn(4), new bn(5), new bn(6)]],
                                                                                                                      value});
                                                           test({ type: 'bytes', expected: '0x6761766f66796f726b',
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000009' + '6761766f66796f726b0000000000000000000000000000000000000000000000' });
                                                           test({ type: 'bytes', expected: '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000020' + '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' });
                                                           test({ type: 'bytes', expected: '0x131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' + '231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' + '331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000060' + '131a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' + '231a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' + '331a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' });
                                                           test({ type: 'bytes', expected: '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' + '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b',
                                                                                                                      value: '0000000000000000000000000000000000000000000000000000000000000020' + '0000000000000000000000000000000000000000000000000000000000000040' + '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' + '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' });
                                                           /* test({ type: 'bytes[2]', expected: ['0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134a',
                                                                                               '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b'],
                                                                                                               value: '0000000000000000000000000000000000000000000000000000000000000040' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000080' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000020' +
                                                                                                                      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134a' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000020' +
                                                                                                                      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b'});
                                                           test({ type: 'bytes[][2]', expected: [['0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134a'],
                                                                                                 ['0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
                                                                                                  '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134c',
                                                                                                  '0x731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134d']],
                                                                                                               value: '0000000000000000000000000000000000000000000000000000000000000040' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000080' +
                                                                                                                       '0000000000000000000000000000000000000000000000000000000000000001' + // 40 //
                                                                                                                      '00000000000000000000000000000000000000000000000000000000000000e0' +
                                                                                                                       '0000000000000000000000000000000000000000000000000000000000000002' + // 80 //
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000120' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000180' +
                                                                                                                       '0000000000000000000000000000000000000000000000000000000000000020' + // e0 //
                                                                                                                      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134a' +
                                                                                                                       '0000000000000000000000000000000000000000000000000000000000000040' + // 120 //
                                                                                                                      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134b' +
                                                                                                                      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134c' +
                                                                                                                      '0000000000000000000000000000000000000000000000000000000000000020' + // 180 //
                                                                                                                      '731a3afc00d1b1e3461b955e53fc866dcf303b3eb9f4c16f89e388930f48134d'});*/

                                                           test({ type: 'bytes1', expected: '0xcf',
            